# Project metadata and package configuration
[tool.poetry]
name = "neuropath"
version = "0.1.0"
description = "Avanade's AI-powered Microsoft certification study assistant"
authors = []
readme = "README.md"
packages = [{include = "services"}, {include = "prompts"}, {include = "utils"}]  # TODO: Update after project reorganization

# Production dependencies
[tool.poetry.dependencies]
python = ">=3.11"
# Core application dependencies
streamlit = "^1.45.0"
openai = "^1.82.0"
python-dotenv = "^1.1.0"
tenacity = "^9.1.2"
tabulate = "^0.9.0"
requests = "^2.32.3"
pandas = "^2.2.3"
# Azure and AI dependencies
azure-ai-inference = "^1.0.0b9"
azure-core = "^1.32.0"
# Additional dependencies from req.txt
beautifulsoup4 = "^4.13.4"
matplotlib = "^3.10.1"
numpy = "^2.2.5"
pillow = "^11.2.1"
pypdf2 = "^3.0.1"
sqlalchemy = "^1.3.22"
nltk = "^3.9.1"
textblob = "^0.19.0"
sounddevice = "^0.5.2"

# Development and testing dependencies
[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
black = "^23.0.0"
flake8 = "^6.0.0"
ruff = "^0.1.0"
pylint = "^3.0.0"
pre-commit = "^3.5.0"

# CLI command shortcuts
[tool.poetry.scripts]
start = "main:main" # TODO: Update after project reorganization

# Build system configuration
[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

# Testing configuration
[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
env = ["SETTINGS_ENV_FILE=.env.test"]

# Code formatting and linting configuration
[tool.ruff]
line-length = 120
target-version = "py311"

[tool.ruff.lint.isort]
combine-as-imports = true

# Dead code detection configuration
[tool.vulture]
min_confidence = 70
paths = ["services", "prompts", "utils", "tests"]  # TODO: Update after project reorganization

# Unused dependency detection configuration
[tool.creosote]
venvs=[".venv"]
paths=["services", "prompts", "utils"]  # TODO: Update after project reorganization
deps-file="pyproject.toml"
sections=["tool.poetry.dependencies"]